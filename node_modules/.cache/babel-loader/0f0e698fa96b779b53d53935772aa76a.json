{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projets\\\\TomatoTimerReact\\\\src\\\\components\\\\Timer.jsx\";\nimport React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport ButtonGroup from './ButtonGroup';\nimport Display from './Display';\n\nclass Timer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      initialValue: 10,\n      duration: 10,\n      message: \"\",\n      handle: 0\n    };\n\n    this.notify = (type, message) => {\n      toast[type](message, {\n        autoClose: 1500\n      });\n    };\n\n    this.prependZero = value => {\n      return value < 10 ? \"0\" + value.toString() : value.toString();\n    };\n\n    this.formatDuration = () => {\n      const minutes = Math.floor(this.state.duration / 60);\n      const seconds = Math.floor(this.state.duration % 60);\n      return \"\".concat(this.prependZero(minutes), \":\").concat(this.prependZero(seconds));\n    };\n\n    this.clean = message => {\n      clearInterval(this.state.handle);\n      this.setState({\n        message: message\n      });\n    };\n\n    this.count = () => {\n      this.setState({\n        duration: this.state.duration - 1\n      });\n\n      if (this.state.duration === 0) {\n        this.clean();\n      }\n    };\n\n    this.start = () => {\n      if (this.state.duration === 0) {} else {\n        this.notify(\"success\", \"Lancement du chronomètre\");\n        const handle = setInterval(() => {\n          this.count();\n        }, 1000);\n        this.setState({\n          handle: handle,\n          message: \"\"\n        });\n      }\n    };\n\n    this.stop = () => {\n      this.notify(\"warn\", \"Chronomètre mis en pause\");\n      this.clean();\n    };\n\n    this.reset = () => {\n      this.notify(\"error\", \"Chronomètre réinitialisé\");\n      this.clean();\n      this.setState({\n        duration: this.state.initialValue\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      initialValue: parseInt(this.props.duration, 10) * 60,\n      duration: parseInt(this.props.duration, 10) * 60\n    });\n  }\n\n  componentWillUnmount() {\n    this.clean();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Display, {\n      title: this.props.title,\n      timerValue: this.formatDuration(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(ButtonGroup, {\n      onStart: this.start,\n      onStop: this.stop,\n      onReset: this.reset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginLeft: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.message));\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["D:/Projets/TomatoTimerReact/src/components/Timer.jsx"],"names":["React","Component","toast","ButtonGroup","Display","Timer","state","initialValue","duration","message","handle","notify","type","autoClose","prependZero","value","toString","formatDuration","minutes","Math","floor","seconds","clean","clearInterval","setState","count","start","setInterval","stop","reset","componentDidMount","parseInt","props","componentWillUnmount","render","title","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { toast } from 'react-toastify';\r\n\r\nimport ButtonGroup from './ButtonGroup';\r\nimport Display from './Display';\r\n\r\nclass Timer extends Component {\r\n    state = { \r\n        initialValue: 10,\r\n        duration: 10,\r\n        message: \"\",\r\n        handle: 0\r\n    };\r\n\r\n    notify = (type, message) => {\r\n            toast[type](message, { autoClose: 1500 });\r\n        \r\n    }\r\n\r\n    prependZero = (value) => {\r\n        return value < 10 ? \"0\" + value.toString() : value.toString();\r\n    }\r\n\r\n    formatDuration = () => {\r\n        const minutes = Math.floor(this.state.duration / 60);\r\n        const seconds = Math.floor(this.state.duration % 60);\r\n        return `${this.prependZero(minutes)}:${this.prependZero(seconds)}`;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            initialValue: parseInt(this.props.duration, 10) * 60,\r\n            duration: parseInt(this.props.duration, 10) * 60\r\n        })\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this.clean();\r\n    }\r\n\r\n    clean = (message) => {\r\n        clearInterval(this.state.handle);\r\n\r\n        this.setState({\r\n            message: message\r\n        });\r\n    }\r\n\r\n    count = () => {\r\n        this.setState({\r\n            duration: this.state.duration - 1\r\n        });\r\n        if(this.state.duration === 0) {\r\n            this.clean();\r\n        }\r\n    };\r\n\r\n    start = () => {\r\n        if (this.state.duration === 0) {\r\n\r\n        } else {\r\n            this.notify(\"success\", \"Lancement du chronomètre\");\r\n        const handle = setInterval(()=> {\r\n            this.count();\r\n        }, 1000);\r\n\r\n        this.setState({\r\n            handle: handle,\r\n            message: \"\"\r\n        });\r\n        }\r\n    }\r\n\r\n    stop = () => {\r\n        this.notify(\"warn\", \"Chronomètre mis en pause\");\r\n        this.clean();\r\n    }\r\n\r\n    reset = () => {\r\n        this.notify(\"error\", \"Chronomètre réinitialisé\");\r\n        this.clean();\r\n        this.setState({\r\n            duration: this.state.initialValue\r\n        });\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <div>\r\n                <Display title={this.props.title} timerValue={this.formatDuration()}/>\r\n                </div>\r\n\r\n                <ButtonGroup onStart={this.start} onStop={this.stop} onReset={this.reset} />\r\n\r\n                <div style={{marginLeft: 15}}>{this.state.message}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Timer;"]},"metadata":{},"sourceType":"module"}